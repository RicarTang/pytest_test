{
  "uid" : "91f5f2868e977294",
  "name" : "test_login[data0]",
  "fullName" : "test_case.test_data.Test_login#test_login",
  "historyId" : "84b20d3e26d16b5c38fb469582f354d0",
  "time" : {
    "start" : 1659323288860,
    "stop" : 1659323299568,
    "duration" : 10708
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "self = <test_case.test_data.Test_login object at 0x7f5f2ad1d850>\ndata = {'name': 'admin', 'pwd': 'admin123456'}, openweb = None\n\n    @pytest.mark.parametrize('data', yaml_data)\n    def test_login(self, data,openweb):\n        self.dr.get('http://127.0.0.1/TinyShop/')\n>       self.send_user(data['name'])\n\n../test_case/test_data.py:26: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../page/login_page.py:16: in send_user\n    self.base_sendkeys(self.login_user, name)\n../common/base.py:38: in base_sendkeys\n    a = self.base_find(ele)\n../common/base.py:34: in base_find\n    return WebDriverWait(self.dr, 10, 1).until(lambda x: x.find_element(*ele))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"c0b55e60d4e03d66e77b0f1c33c43e2c\")>\nmethod = <function Base.base_find.<locals>.<lambda> at 0x7f5f2ad7c820>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/home/tang/.local/lib/python3.8/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "openweb",
    "time" : {
      "start" : 1659323288743,
      "stop" : 1659323288856,
      "duration" : 113
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ {
    "name" : "openweb::0",
    "time" : {
      "start" : 1659323309951,
      "stop" : 1659323313013,
      "duration" : 3062
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "test_case"
  }, {
    "name" : "suite",
    "value" : "test_data"
  }, {
    "name" : "subSuite",
    "value" : "Test_login"
  }, {
    "name" : "host",
    "value" : "tang-X550VQ"
  }, {
    "name" : "thread",
    "value" : "13832-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_case.test_data"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "data",
    "value" : "{'name': 'admin', 'pwd': 'admin123456'}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "91f5f2868e977294.json",
  "parameterValues" : [ "{'name': 'admin', 'pwd': 'admin123456'}" ]
}